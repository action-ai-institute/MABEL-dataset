reference_vaddr	symbol_addr	symbol_type	caller_function	data
0x10001015	0x1000b0ec	import	0x10001010	MSVCP60.dll.sym_imp_public: void __thiscall std::ios_base::Init::constructor(void)
0x10001055	0x1000b0f4	import	0x10001050	MSVCP60.dll.sym_imp_public: void __thiscall std::_Winit::constructor(void)
0x10001d20	0x1000b110	import	0x10001ce0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10001d5c	0x1000b158	import	0x10001ce0	MSVCRT.dll.sprintf
0x10001d6d	0x1000d070	string	0x10001ce0	%02x
0x10001d7f	0x10001d66	string	0x10001ce0	3ÉŠL.\Qhp blocks=Basic Latin,Latin Extended-B
0x10001dac	0x1000b10c	import	0x10001ce0	MSVCP60.dll.sym_imp_public: unsigned int __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::max_size(void)const
0x10001db6	0x1000b108	import	0x10001ce0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10001dda	0x1000b104	import	0x10001ce0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10001df4	0x1000b104	import	0x10001ce0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10001e16	0x1000b104	import	0x10001ce0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10001e1f	0x1000b100	import	0x10001ce0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Copy(unsigned int)
0x10001f15	0x1000b0ec	import	0x10001f10	MSVCP60.dll.sym_imp_public: void __thiscall std::ios_base::Init::constructor(void)
0x10001f55	0x1000b0f4	import	0x10001f50	MSVCP60.dll.sym_imp_public: void __thiscall std::_Winit::constructor(void)
0x10001f9d	0x1000d088	string	0x10001f90	www.yandex2unitedstated.dynamic-dns.net
0x10001fc9	0x1000b108	import	0x10001f90	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10001ff9	0x1000b104	import	0x10001f90	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000200f	0x1000b104	import	0x10001f90	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000202a	0x1000b104	import	0x10001f90	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10002036	0x1000b100	import	0x10001f90	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Copy(unsigned int)
0x10002048	0x1000d088	string	0x10001f90	www.yandex2unitedstated.dynamic-dns.net
0x100020ed	0x1000d194	string	0x100020e0	news.php
0x10002119	0x1000b108	import	0x100020e0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10002149	0x1000b104	import	0x100020e0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000215f	0x1000b104	import	0x100020e0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000217a	0x1000b104	import	0x100020e0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10002186	0x1000b100	import	0x100020e0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Copy(unsigned int)
0x10002198	0x1000d194	string	0x100020e0	news.php
0x1000223d	0x1000d29c	string	0x10002230	---------------------------7db29f2140360
0x10002269	0x1000b108	import	0x10002230	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10002299	0x1000b104	import	0x10002230	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100022af	0x1000b104	import	0x10002230	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100022ca	0x1000b104	import	0x10002230	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100022d6	0x1000b100	import	0x10002230	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Copy(unsigned int)
0x100022e8	0x1000d29c	string	0x10002230	---------------------------7db29f2140360
0x10002444	0x1000b0bc	import	0x10002400	KERNEL32.dll.CreateFileA
0x10002451	0x1000b0c0	import	0x10002400	KERNEL32.dll.GetLastError
0x1000245d	0x1000251b	string	0x10002400	_^]3
0x10002499	0x1000b0c4	import	0x10002400	KERNEL32.dll.GetFileSize
0x100024b4	0x1000b0c8	import	0x10002400	KERNEL32.dll.CloseHandle
0x100024bc	0x1000251b	string	0x10002400	_^]3
0x10002504	0x1000b0cc	import	0x10002400	KERNEL32.dll.ReadFile
0x10002530	0x1000b0c8	import	0x10002400	KERNEL32.dll.CloseHandle
0x100026ca	0x1000b1d8	import	0x10002570	WININET.dll.InternetCrackUrlA
0x100026e7	0x1000d2dc	string	0x10002570	Mozilla/5.0 (Windows NT 5.2) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.122 Safari/534.30
0x100026ec	0x1000b1d4	import	0x10002570	WININET.dll.InternetOpenA
0x1000271f	0x1000b1d0	import	0x10002570	WININET.dll.InternetConnectA
0x1000277c	0x1000d2cc	string	0x10002570	HTTP/1.1
0x10002788	0x1000b1cc	import	0x10002570	WININET.dll.HttpOpenRequestA
0x100027d8	0x1000b1c8	import	0x10002570	WININET.dll.InternetReadFile
0x1000280b	0x1000b11c	import	0x10002570	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x1000281d	0x1000b108	import	0x10002570	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10002834	0x1000b110	import	0x10002570	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x1000287f	0x1000b1c4	import	0x10002570	WININET.dll.InternetCloseHandle
0x1000288a	0x1000b1c4	import	0x10002570	WININET.dll.InternetCloseHandle
0x1000289d	0x1000b1c4	import	0x10002570	WININET.dll.InternetCloseHandle
0x100028c9	0x1000b118	import	0x10002570	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10002a50	0x1000b1d8	import	0x10002940	WININET.dll.InternetCrackUrlA
0x10002a5f	0x10002a68	string	0x10002940	SSSSh
0x10002a6c	0x1000d2dc	string	0x10002940	Mozilla/5.0 (Windows NT 5.2) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.122 Safari/534.30
0x10002a71	0x1000b1d4	import	0x10002940	WININET.dll.InternetOpenA
0x10002aa5	0x1000b1d0	import	0x10002940	WININET.dll.InternetConnectA
0x10002b23	0x1000d2cc	string	0x10002940	HTTP/1.1
0x10002b2f	0x1000b1cc	import	0x10002940	WININET.dll.HttpOpenRequestA
0x10002b66	0x1000b0bc	import	0x10002940	KERNEL32.dll.CreateFileA
0x10002bb6	0x1000b1c8	import	0x10002940	WININET.dll.InternetReadFile
0x10002bdf	0x1000b0b8	import	0x10002940	KERNEL32.dll.WriteFile
0x10002bf9	0x1000b0c8	import	0x10002940	KERNEL32.dll.CloseHandle
0x10002c10	0x1000b1c4	import	0x10002940	WININET.dll.InternetCloseHandle
0x10002c6c	0x1000b1c0	import	0x10002c50	WININET.dll.HttpSendRequestA
0x10002c72	0x1000b1dc	import	0x10002c50	WININET.dll.HttpQueryInfoA
0x10002ce3	0x1000b168	import	0x10002ce0	MSVCRT.dll.time
0x10002cf2	0x1000b164	import	0x10002ce0	MSVCRT.dll.ctime
0x10002d35	0x1000d348	string	0x10002d00	Content-Type: multipart/form-data; boundary=
0x10002d4a	0x1000b11c	import	0x10002d00	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10002d54	0x1000b108	import	0x10002d00	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10002d6c	0x1000b110	import	0x10002d00	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10002d80	0x1000d348	string	0x10002d00	Content-Type: multipart/form-data; boundary=
0x10002da1	0x1000b11c	import	0x10002d00	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10002db4	0x1000b120	import	0x10002d00	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10002dc4	0x1000b11c	import	0x10002d00	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10002ddd	0x1000b108	import	0x10002d00	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10002df4	0x1000b110	import	0x10002d00	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10002e3c	0x1000b11c	import	0x10002d00	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10002e4d	0x1000b118	import	0x10002d00	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10002ed5	0x1000d378	string	0x10002ea0	Referer:
0x10002eea	0x1000b11c	import	0x10002ea0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10002ef4	0x1000b108	import	0x10002ea0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10002f0c	0x1000b110	import	0x10002ea0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10002f20	0x1000d378	string	0x10002ea0	Referer:
0x10002f41	0x1000b11c	import	0x10002ea0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10002f54	0x1000b120	import	0x10002ea0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10002f64	0x1000b11c	import	0x10002ea0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10002f7d	0x1000b108	import	0x10002ea0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10002f94	0x1000b110	import	0x10002ea0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10002fdc	0x1000b11c	import	0x10002ea0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10002fed	0x1000b118	import	0x10002ea0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10003070	0x1000b104	import	0x10003040	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10003097	0x1000b128	import	0x10003040	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x1000309d	0x1000b11c	import	0x10003040	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100030b1	0x1000b120	import	0x10003040	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100030d0	0x1000b128	import	0x10003040	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x100030d6	0x1000d3ac	string	0x10003040	Content-Disposition: form-data; name="myfile"; filename="
0x100030e7	0x1000b11c	import	0x10003040	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100030f9	0x1000b108	import	0x10003040	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10003112	0x1000b110	import	0x10003040	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10003126	0x1000d3ac	string	0x10003040	Content-Disposition: form-data; name="myfile"; filename="
0x10003141	0x1000b124	import	0x10003040	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x1000315a	0x1000b120	import	0x10003040	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10003182	0x1000b108	import	0x10003040	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x1000319a	0x1000b110	import	0x10003040	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100031c9	0x1000b124	import	0x10003040	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x100031e0	0x1000b11c	import	0x10003040	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100031f2	0x1000b108	import	0x10003040	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x1000320a	0x1000b110	import	0x10003040	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10003239	0x1000b124	import	0x10003040	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x1000323f	0x1000d38c	string	0x10003040	Content-Type: image/pjpeg
0x10003261	0x1000b108	import	0x10003040	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10003279	0x1000b110	import	0x10003040	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x1000328d	0x1000d38c	string	0x10003040	Content-Type: image/pjpeg
0x100032a8	0x1000b124	import	0x10003040	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x100032ae	0x1000d384	string	0x10003040	\r\n\r\n
0x100032bf	0x1000b11c	import	0x10003040	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100032d1	0x1000b108	import	0x10003040	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x100032e9	0x1000b110	import	0x10003040	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100032fd	0x1000d384	string	0x10003040	\r\n\r\n
0x1000332d	0x1000b104	import	0x10003040	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10003333	0x1000b11c	import	0x10003040	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10003345	0x1000b118	import	0x10003040	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100033ce	0x1000b104	import	0x100033a0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100033e9	0x1000b11c	import	0x100033a0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100033fb	0x1000b108	import	0x100033a0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10003413	0x1000b110	import	0x100033a0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10003442	0x1000b124	import	0x100033a0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x1000346a	0x1000b108	import	0x100033a0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10003481	0x1000b110	import	0x100033a0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100034b0	0x1000b124	import	0x100033a0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x100034b6	0x1000b11c	import	0x100033a0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100034c9	0x1000b120	import	0x100033a0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100034e0	0x1000b11c	import	0x100033a0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100034f2	0x1000b108	import	0x100033a0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10003509	0x1000b110	import	0x100033a0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x1000354f	0x1000b11c	import	0x100033a0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10003561	0x1000b108	import	0x100033a0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10003578	0x1000b110	import	0x100033a0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100035c0	0x1000b11c	import	0x100033a0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100035d1	0x1000b118	import	0x100033a0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10003662	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000367d	0x1000b130	import	0x10003630	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(unsigned int, char)
0x1000369c	0x1000b128	import	0x10003630	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x100036a2	0x1000b11c	import	0x10003630	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100036b8	0x1000b120	import	0x10003630	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100036cb	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100036ea	0x1000b12c	import	0x10003630	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100036f0	0x1000d4b4	string	0x10003630	.gif
0x10003708	0x1000d4b4	string	0x10003630	.gif
0x10003711	0x1000b128	import	0x10003630	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10003786	0x1000d400	string	0x10003630	Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)
0x10003795	0x1000b1d4	import	0x10003630	WININET.dll.InternetOpenA
0x100037b3	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100037c7	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100037db	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100037ef	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10003803	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000381a	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10003851	0x1000b1d0	import	0x10003630	WININET.dll.InternetConnectA
0x10003866	0x1000b1c4	import	0x10003630	WININET.dll.InternetCloseHandle
0x1000387a	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000388e	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100038a2	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100038b6	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100038ca	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100038e1	0x1000b104	import	0x10003630	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000390a	0x1000d3f4	string	0x10003630	HTTP/1.0
0x10003910	0x1000d3ec	string	0x10003630	POST
0x10003916	0x1000b1cc	import	0x10003630	WININET.dll.HttpOpenRequestA
0x10003937	0x1000b1b0	import	0x10003630	WININET.dll.HttpAddRequestHeadersA
0x1000395e	0x1000b1b0	import	0x10003630	WININET.dll.HttpAddRequestHeadersA
0x1000399c	0x1000b1b4	import	0x10003630	WININET.dll.HttpSendRequestExA
0x100039bb	0x1000b1b8	import	0x10003630	WININET.dll.InternetWriteFile
0x10003a38	0x1000b1bc	import	0x10003630	WININET.dll.HttpEndRequestA
0x10003a4a	0x1000b1c4	import	0x10003630	WININET.dll.InternetCloseHandle
0x10003c30	0x1000b104	import	0x10003b90	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10003c36	0x1000b11c	import	0x10003b90	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10003c43	0x1000b118	import	0x10003b90	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10003c71	0x1000d400	string	0x10003b90	Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)
0x10003c78	0x1000b1d4	import	0x10003b90	WININET.dll.InternetOpenA
0x10003cb5	0x1000b1d0	import	0x10003b90	WININET.dll.InternetConnectA
0x10003cc6	0x1000b1c4	import	0x10003b90	WININET.dll.InternetCloseHandle
0x10003cd9	0x1000b104	import	0x10003b90	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10003ced	0x1000b104	import	0x10003b90	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10003d01	0x1000b104	import	0x10003b90	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10003d18	0x1000b104	import	0x10003b90	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10003d43	0x1000d3f4	string	0x10003b90	HTTP/1.0
0x10003d49	0x1000d3ec	string	0x10003b90	POST
0x10003d4f	0x1000b1cc	import	0x10003b90	WININET.dll.HttpOpenRequestA
0x10003d68	0x1000b1b0	import	0x10003b90	WININET.dll.HttpAddRequestHeadersA
0x10003dcf	0x1000b1b4	import	0x10003b90	WININET.dll.HttpSendRequestExA
0x10003dee	0x1000b1b8	import	0x10003b90	WININET.dll.InternetWriteFile
0x10003e61	0x1000b1bc	import	0x10003b90	WININET.dll.HttpEndRequestA
0x10003e74	0x1000b1c4	import	0x10003b90	WININET.dll.InternetCloseHandle
0x10003fa2	0x1000b104	import	0x10003f70	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10003fa8	0x1000d4c0	string	0x10003f70	client.jpg
0x10003fb8	0x1000d4c0	string	0x10003f70	client.jpg
0x10003fc1	0x1000b12c	import	0x10003f70	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10003ff8	0x1000b104	import	0x10003f70	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004017	0x1000b12c	import	0x10003f70	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004056	0x1000d400	string	0x10003f70	Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)
0x1000405b	0x1000b1d4	import	0x10003f70	WININET.dll.InternetOpenA
0x10004072	0x1000b104	import	0x10003f70	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004082	0x1000b104	import	0x10003f70	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004096	0x1000b104	import	0x10003f70	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100040de	0x1000b1d0	import	0x10003f70	WININET.dll.InternetConnectA
0x100040f2	0x1000b1c4	import	0x10003f70	WININET.dll.InternetCloseHandle
0x10004103	0x1000b104	import	0x10003f70	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004114	0x1000b104	import	0x10003f70	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004128	0x1000b104	import	0x10003f70	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004161	0x1000d3f4	string	0x10003f70	HTTP/1.0
0x10004167	0x1000d3ec	string	0x10003f70	POST
0x1000416d	0x1000b1cc	import	0x10003f70	WININET.dll.HttpOpenRequestA
0x1000418e	0x1000b1b0	import	0x10003f70	WININET.dll.HttpAddRequestHeadersA
0x100041c0	0x1000b1b4	import	0x10003f70	WININET.dll.HttpSendRequestExA
0x100041d1	0x1000b1b8	import	0x10003f70	WININET.dll.InternetWriteFile
0x1000421d	0x1000b1bc	import	0x10003f70	WININET.dll.HttpEndRequestA
0x10004233	0x1000b1c4	import	0x10003f70	WININET.dll.InternetCloseHandle
0x10004310	0x1000b104	import	0x100042e0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004316	0x1000d4f0	string	0x100042e0	{ "para1": "
0x1000432e	0x1000d4f0	string	0x100042e0	{ "para1": "
0x10004337	0x1000b128	import	0x100042e0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x1000433d	0x1000b11c	import	0x100042e0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10004351	0x1000b120	import	0x100042e0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004357	0x1000d4e0	string	0x100042e0	", "para2": "
0x10004368	0x1000b11c	import	0x100042e0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x1000437a	0x1000b108	import	0x100042e0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10004393	0x1000b110	import	0x100042e0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100043a7	0x1000d4e0	string	0x100042e0	", "para2": "
0x100043c2	0x1000b124	import	0x100042e0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x100043db	0x1000b120	import	0x100042e0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100043e1	0x1000d4d0	string	0x100042e0	", "para3": "
0x10004403	0x1000b108	import	0x100042e0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x1000441b	0x1000b110	import	0x100042e0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x1000442f	0x1000d4d0	string	0x100042e0	", "para3": "
0x10004451	0x1000b11c	import	0x100042e0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10004470	0x1000b108	import	0x100042e0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10004488	0x1000b110	import	0x100042e0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10004499	0x1000b0fc	import	0x100042e0	MSVCP60.dll.sym_imp_char const `private: static char const * __cdecl std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Nullstr(void)'::`2'::_C
0x100044bf	0x1000b124	import	0x100042e0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x100044e7	0x1000b108	import	0x100042e0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x100044ff	0x1000b110	import	0x100042e0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10004543	0x1000b104	import	0x100042e0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000455a	0x1000b118	import	0x100042e0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100045e0	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100045e6	0x1000d4f0	string	0x100045b0	{ "para1": "
0x100045fe	0x1000d4f0	string	0x100045b0	{ "para1": "
0x10004607	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x1000460d	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10004621	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004627	0x1000d4e0	string	0x100045b0	", "para2": "
0x10004637	0x1000d4e0	string	0x100045b0	", "para2": "
0x10004640	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10004646	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x1000465a	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004660	0x1000d4d0	string	0x100045b0	", "para3": "
0x10004670	0x1000d4d0	string	0x100045b0	", "para3": "
0x10004679	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x1000467f	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10004693	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004699	0x1000d510	string	0x100045b0	", "para4": "
0x100046aa	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100046bc	0x1000b108	import	0x100045b0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x100046d5	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100046e9	0x1000d510	string	0x100045b0	", "para4": "
0x10004704	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x1000471d	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004723	0x1000d500	string	0x100045b0	", "para5": "
0x10004745	0x1000b108	import	0x100045b0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x1000475d	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10004771	0x1000d500	string	0x100045b0	", "para5": "
0x10004793	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100047b2	0x1000b108	import	0x100045b0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x100047ca	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100047db	0x1000b0fc	import	0x100045b0	MSVCP60.dll.sym_imp_char const `private: static char const * __cdecl std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Nullstr(void)'::`2'::_C
0x10004801	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x10004829	0x1000b108	import	0x100045b0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10004841	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10004885	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000489c	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x1000491e	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000493d	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004957	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000495d	0x1000d538	string	0x100045b0	upfile
0x10004979	0x1000d538	string	0x100045b0	upfile
0x10004983	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100049a5	0x1000b0b4	import	0x100045b0	KERNEL32.dll.GetDriveTypeA
0x100049c1	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100049e2	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004a03	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004a25	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004a46	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004a68	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004a9b	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10004ab2	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004ac8	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004ae0	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004aff	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10004b15	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004b2b	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004b3d	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004b64	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004b85	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004ba0	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004bbf	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004be0	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004c02	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004c35	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10004c4c	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004c62	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004c68	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10004c7b	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004c9a	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10004cb0	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004cc3	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004cd8	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004cf9	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004d17	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004d32	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004d51	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004d72	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004d94	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004dc4	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10004ddb	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004df1	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004e09	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004e28	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10004e3e	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004e51	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004e63	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004e84	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004ea0	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10004ec7	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x10004eea	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004f0c	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004f2d	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004f4f	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10004f82	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10004f99	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004faf	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10004fc7	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10004fe6	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10004ffc	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005012	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005172	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005178	0x1000b0ac	import	0x100045b0	KERNEL32.dll.Sleep
0x100051b6	0x1000b0b0	import	0x100045b0	KERNEL32.dll.PeekNamedPipe
0x100051da	0x1000b0cc	import	0x100045b0	KERNEL32.dll.ReadFile
0x100051f8	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10005237	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10005249	0x1000b108	import	0x100045b0	MSVCP60.dll.sym_imp_void __cdecl std::_Xlen(void)
0x10005261	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10005296	0x1000d538	string	0x100045b0	upfile
0x100052af	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100052c3	0x1000d538	string	0x100045b0	upfile
0x1000539e	0x1000b098	import	0x100045b0	KERNEL32.dll.CreatePipe
0x100053e3	0x100055d6	string	0x100045b0	_^]3
0x100053fd	0x100055d6	string	0x100045b0	_^]3
0x1000541d	0x1000b09c	import	0x100045b0	KERNEL32.dll.GetStartupInfoA
0x1000544e	0x1000b0a0	import	0x100045b0	KERNEL32.dll.GetSystemDirectoryA
0x10005454	0x1000d548	string	0x100045b0	\cmd.exe
0x10005482	0x1000b0c0	import	0x100045b0	KERNEL32.dll.GetLastError
0x100054a4	0x1000b0a4	import	0x100045b0	KERNEL32.dll.CreateProcessA
0x100054af	0x1000b16c	import	0x100045b0	MSVCRT.dll.exit
0x100054c5	0x1000b0a8	import	0x100045b0	KERNEL32.dll.CreateThread
0x100054cb	0x1000b0ac	import	0x100045b0	KERNEL32.dll.Sleep
0x100054e0	0x1000b1a8	import	0x100045b0	USER32.dll.GetMessageA
0x1000557f	0x1000b0b8	import	0x100045b0	KERNEL32.dll.WriteFile
0x10005585	0x1000d540	string	0x100045b0	exit\r\n
0x100055c6	0x1000b0c8	import	0x100045b0	KERNEL32.dll.CloseHandle
0x1000561e	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000563d	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005657	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000565d	0x1000d538	string	0x100045b0	upfile
0x10005675	0x1000d538	string	0x100045b0	upfile
0x1000567f	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005692	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100056b1	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100056d2	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100056f4	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005715	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005737	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005752	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005771	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005792	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100057b4	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100057d5	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100057f7	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005818	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000583a	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x1000585b	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000587d	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x1000589e	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100058c0	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100058db	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100058fa	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005915	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000591b	0x1000d5a0	string	0x100045b0	Computername
0x10005934	0x1000d5a0	string	0x100045b0	Computername
0x1000593d	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x1000595f	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10005976	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005989	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000598f	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100059a2	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100059c1	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x100059c7	0x1000d598	string	0x100045b0	Domain
0x100059d7	0x1000d598	string	0x100045b0	Domain
0x100059e0	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005a05	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10005a1c	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005a2f	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005a47	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005a66	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10005a85	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005aaa	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10005ac1	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005ad4	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005aec	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005b0b	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10005b11	0x1000d58c	string	0x100045b0	user
0x10005b21	0x1000d58c	string	0x100045b0	user
0x10005b2a	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005b4c	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10005b63	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005b76	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005b8e	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005bad	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10005bb3	0x1000d57c	string	0x100045b0	Is admin user
0x10005bc3	0x1000d57c	string	0x100045b0	Is admin user
0x10005bcc	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005bf1	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10005c08	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005c1b	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005c33	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005c52	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10005c58	0x1000d570	string	0x100045b0	Processor
0x10005c68	0x1000d570	string	0x100045b0	Processor
0x10005c71	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005c96	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10005cad	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005cc0	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005cd8	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005cf7	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10005cfd	0x1000d568	string	0x100045b0	Memory
0x10005d0d	0x1000d568	string	0x100045b0	Memory
0x10005d16	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005d3b	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10005d52	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005d65	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005d7d	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005d9c	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10005da2	0x1000d560	string	0x100045b0	Country
0x10005db2	0x1000d560	string	0x100045b0	Country
0x10005dbb	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10005de0	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10005df7	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005e0a	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005e22	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005e41	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10005e47	0x1000d554	string	0x100045b0	Is vmware
0x10005e5f	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10005e71	0x1000d554	string	0x100045b0	Is vmware
0x10005e87	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x10005eae	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10005ec5	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005ed8	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005ede	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10005ef1	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10005f10	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10005f56	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005f6a	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005f81	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005f98	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10005faf	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100061be	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100061df	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100061f9	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100061ff	0x1000d538	string	0x100045b0	upfile
0x10006216	0x1000d538	string	0x100045b0	upfile
0x10006220	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x1000622d	0x1000b018	import	0x100045b0	ADVAPI32.dll.OpenSCManagerA
0x1000623d	0x1000b0e8	import	0x100045b0	MSVCP60.dll.sym_imp_class std::basic_ostream<char, struct std::char_traits<char>> std::cout
0x10006243	0x1000d654	string	0x100045b0	OpenSCManager failed.
0x10006261	0x1000b094	import	0x100045b0	KERNEL32.dll.LocalAlloc
0x10006286	0x1000b01c	import	0x100045b0	ADVAPI32.dll.EnumServicesStatusA
0x10006295	0x1000d638	string	0x100045b0	EnumServicesStatus Failed.
0x1000629b	0x1000b138	import	0x100045b0	MSVCP60.dll.sym_imp_class std::basic_ostream<char, struct std::char_traits<char>> & __cdecl std::operator<<(class std::basic_ostream<char, struct std::char_traits<char>> &, char const *)
0x100062a2	0x1000b134	import	0x100045b0	MSVCP60.dll.sym_imp_class std::basic_ostream<char, struct std::char_traits<char>> & __cdecl std::endl(class std::basic_ostream<char, struct std::char_traits<char>> &)
0x100062b9	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100062cc	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100062e9	0x100062ed	string	0x100045b0	3ÉŠD$ blocks=Basic Latin,Latin Extended-B
0x10006321	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000633c	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x1000635f	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x1000637e	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006399	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100063bc	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x100063de	0x1000d624	string	0x100045b0	CONTINUE_PENDING
0x100063e9	0x1000d614	string	0x100045b0	PAUSE_PENDING
0x100063f4	0x1000d60c	string	0x100045b0	PAUSED
0x100063ff	0x1000d604	string	0x100045b0	RUNNING
0x1000640a	0x1000d5f4	string	0x100045b0	START_PENDING
0x10006415	0x1000d5ec	string	0x100045b0	STOPPED
0x10006420	0x1000d5e4	string	0x100045b0	UNKNOWN
0x1000644c	0x1000b020	import	0x100045b0	ADVAPI32.dll.OpenServiceA
0x1000645b	0x1000b094	import	0x100045b0	KERNEL32.dll.LocalAlloc
0x1000646f	0x1000b024	import	0x100045b0	ADVAPI32.dll.QueryServiceConfigA
0x1000648f	0x1000d5e4	string	0x100045b0	UNKNOWN
0x10006496	0x1000d5dc	string	0x100045b0	Forbid
0x100064a1	0x1000d5d4	string	0x100045b0	Manu
0x100064ac	0x1000d5cc	string	0x100045b0	Auto
0x100064cf	0x1000b028	import	0x100045b0	ADVAPI32.dll.CloseServiceHandle
0x100064ea	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000650a	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10006537	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x1000655a	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000657a	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100065a7	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x100065ca	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100065eb	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10006619	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x1000665b	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10006672	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10006689	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100066a4	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100066c3	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x100066da	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100066f1	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006708	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006796	0x1000d5b0	string	0x100045b0	QueryServiceConfig Failed.
0x1000679c	0x1000b138	import	0x100045b0	MSVCP60.dll.sym_imp_class std::basic_ostream<char, struct std::char_traits<char>> & __cdecl std::operator<<(class std::basic_ostream<char, struct std::char_traits<char>> &, char const *)
0x100067a3	0x1000b134	import	0x100045b0	MSVCP60.dll.sym_imp_class std::basic_ostream<char, struct std::char_traits<char>> & __cdecl std::endl(class std::basic_ostream<char, struct std::char_traits<char>> &)
0x100067ba	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100067ce	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100067db	0x1000b028	import	0x100045b0	ADVAPI32.dll.CloseServiceHandle
0x100068ee	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000690d	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10006927	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000692d	0x1000d538	string	0x100045b0	upfile
0x10006945	0x1000d538	string	0x100045b0	upfile
0x1000694f	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10006976	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006989	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100069b0	0x1000b158	import	0x100045b0	MSVCRT.dll.sprintf
0x100069cf	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10006a31	0x1000b08c	import	0x100045b0	KERNEL32.dll.OpenProcess
0x10006a4b	0x1000b0c8	import	0x100045b0	KERNEL32.dll.CloseHandle
0x10006a53	0x1000d670	string	0x100045b0	SYSTEM
0x10006a6f	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006a8e	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10006aa9	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006ac8	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10006ae3	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006b02	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10006b31	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10006b59	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x10006b7d	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10006b94	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10006ba8	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006bae	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10006bc1	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10006be0	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10006bf4	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006c08	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006c92	0x1000b0c8	import	0x100045b0	KERNEL32.dll.CloseHandle
0x10006d5b	0x1000b0e4	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::substr(unsigned int, unsigned int)
0x10006d79	0x1000b170	import	0x100045b0	MSVCRT.dll.atoi
0x10006d8b	0x1000b08c	import	0x100045b0	KERNEL32.dll.OpenProcess
0x10006d97	0x1000b048	import	0x100045b0	KERNEL32.dll.TerminateProcess
0x10006da6	0x1000d698	string	0x100045b0	KillProcess success-%d
0x10006db2	0x1000d680	string	0x100045b0	KillProcess failed-%d
0x10006dbf	0x1000d680	string	0x100045b0	KillProcess failed-%d
0x10006dc5	0x1000b158	import	0x100045b0	MSVCRT.dll.sprintf
0x10006dfa	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10006ecc	0x1000d538	string	0x100045b0	upfile
0x10006edc	0x1000d538	string	0x100045b0	upfile
0x10006ee6	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10006efe	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006f1d	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10006f37	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006f52	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006f6d	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006f88	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10006fad	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10006fb3	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10006fc9	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10006fe9	0x1000b0dc	import	0x100045b0	MSVCP60.dll.sym_imp_public: unsigned int __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::find(char const *, unsigned int, unsigned int)const
0x10006ffb	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10007013	0x1000b0e0	import	0x100045b0	MSVCP60.dll.sym_imp_public: unsigned int __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::rfind(char const *, unsigned int, unsigned int)const
0x10007041	0x1000b0e4	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::substr(unsigned int, unsigned int)
0x10007047	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x1000705b	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x1000706b	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007082	0x1000b0e4	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::substr(unsigned int, unsigned int)
0x10007088	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x1000709c	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100070ac	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100070c7	0x1000b0e4	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::substr(unsigned int, unsigned int)
0x100070cd	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100070e1	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100070f1	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007146	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x1000715a	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x1000716a	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007189	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x100071cc	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100072d2	0x1000d538	string	0x100045b0	upfile
0x100072e6	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100072fb	0x1000d538	string	0x100045b0	upfile
0x10007312	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x1000732e	0x1000b0e4	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::substr(unsigned int, unsigned int)
0x1000735c	0x10007363	string	0x100045b0	SSSPh
0x10007367	0x1000d6e0	string	0x100045b0	open
0x1000736d	0x1000b198	import	0x100045b0	SHELL32.dll.ShellExecuteA
0x1000738a	0x1000d6c8	string	0x100045b0	Run File success-%s
0x100073a0	0x1000d6b4	string	0x100045b0	Run File failed-%s
0x100073a6	0x1000b158	import	0x100045b0	MSVCRT.dll.sprintf
0x100073db	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100074b2	0x1000d538	string	0x100045b0	upfile
0x100074c6	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100074db	0x1000d538	string	0x100045b0	upfile
0x100074f2	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x1000750e	0x1000b0e4	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::substr(unsigned int, unsigned int)
0x10007544	0x1000b04c	import	0x100045b0	KERNEL32.dll.DeleteFileA
0x10007560	0x1000d6fc	string	0x100045b0	DelFile success-%s
0x10007576	0x1000d6e8	string	0x100045b0	DelFile failed-%s
0x1000757c	0x1000b158	import	0x100045b0	MSVCRT.dll.sprintf
0x100075b1	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x1000767f	0x1000d538	string	0x100045b0	upfile
0x1000768f	0x1000d538	string	0x100045b0	upfile
0x10007699	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100076ad	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100076cc	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100076eb	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007707	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007728	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10007749	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10007769	0x1000b0dc	import	0x100045b0	MSVCP60.dll.sym_imp_public: unsigned int __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::find(char const *, unsigned int, unsigned int)const
0x1000776f	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x1000778d	0x1000b0e4	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::substr(unsigned int, unsigned int)
0x10007793	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100077ab	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100077be	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100077d8	0x1000b0e4	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::substr(unsigned int, unsigned int)
0x100077de	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100077f6	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10007809	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007813	0x1000b0fc	import	0x100045b0	MSVCP60.dll.sym_imp_char const `private: static char const * __cdecl std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Nullstr(void)'::`2'::_C
0x10007852	0x1000b158	import	0x100045b0	MSVCRT.dll.sprintf
0x10007863	0x1000d088	string	0x100045b0	www.yandex2unitedstated.dynamic-dns.net
0x1000786f	0x1000d740	string	0x100045b0	http://%s:%d/cache/%s
0x1000789f	0x1000d728	string	0x100045b0	UploadFile success-%s
0x100078b3	0x1000d710	string	0x100045b0	UploadFile failed-%s
0x100078cc	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100078e9	0x1000b110	import	0x100045b0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10007910	0x1000b124	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x1000795d	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007a3d	0x1000d538	string	0x100045b0	upfile
0x10007a4d	0x1000d538	string	0x100045b0	upfile
0x10007a57	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10007a6b	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007a8a	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10007aa9	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007ac5	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007b00	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007b14	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007b2b	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007b4a	0x1000b0e4	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::substr(unsigned int, unsigned int)
0x10007b80	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007b99	0x1000b0d4	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Freeze(void)
0x10007ba4	0x1000b0fc	import	0x100045b0	MSVCP60.dll.sym_imp_char const `private: static char const * __cdecl std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Nullstr(void)'::`2'::_C
0x10007bf0	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007c14	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10007c5b	0x1000b05c	import	0x100045b0	KERNEL32.dll.FindFirstFileA
0x10007c7d	0x1000b158	import	0x100045b0	MSVCRT.dll.sprintf
0x10007ca2	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10007cc1	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10007cf6	0x1000b194	import	0x100045b0	SHELL32.dll.SHGetFileInfoA
0x10007e06	0x1000b058	import	0x100045b0	KERNEL32.dll.FileTimeToLocalFileTime
0x10007e19	0x1000b054	import	0x100045b0	KERNEL32.dll.FileTimeToSystemTime
0x10007e78	0x1000d758	string	0x100045b0	%4d-%02d-%02d %02d:%02d:%02d
0x10007e92	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007eb6	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10007ed1	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007ef5	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10007f16	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007f3d	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10007f5e	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10007f85	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10007fac	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10007fc3	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10007fd9	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000800e	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10008025	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x1000803b	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10008053	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10008072	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10008089	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100080a0	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000811c	0x1000b050	import	0x100045b0	KERNEL32.dll.FindNextFileA
0x1000824d	0x1000d538	string	0x100045b0	upfile
0x1000825d	0x1000d538	string	0x100045b0	upfile
0x10008267	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x1000827b	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000829a	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100082b9	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100082d5	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10008310	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10008324	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000833b	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000835a	0x1000b0e4	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::substr(unsigned int, unsigned int)
0x10008390	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100083a9	0x1000b0d4	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Freeze(void)
0x100083b4	0x1000b0fc	import	0x100045b0	MSVCP60.dll.sym_imp_char const `private: static char const * __cdecl std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Nullstr(void)'::`2'::_C
0x10008400	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10008424	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x1000846b	0x1000b05c	import	0x100045b0	KERNEL32.dll.FindFirstFileA
0x1000848d	0x1000b158	import	0x100045b0	MSVCRT.dll.sprintf
0x100084b2	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100084d1	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10008506	0x1000b194	import	0x100045b0	SHELL32.dll.SHGetFileInfoA
0x10008616	0x1000b058	import	0x100045b0	KERNEL32.dll.FileTimeToLocalFileTime
0x10008629	0x1000b054	import	0x100045b0	KERNEL32.dll.FileTimeToSystemTime
0x10008688	0x1000d758	string	0x100045b0	%4d-%02d-%02d %02d:%02d:%02d
0x100086a2	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100086c6	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100086e1	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10008705	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10008726	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000874d	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x1000876e	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10008795	0x1000b12c	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x100087bc	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x100087d3	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100087e9	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000881e	0x1000b11c	import	0x100045b0	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10008835	0x1000b118	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x1000884b	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10008863	0x1000b120	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10008882	0x1000b128	import	0x100045b0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::append(char const *, unsigned int)
0x10008899	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100088b0	0x1000b104	import	0x100045b0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000892c	0x1000b050	import	0x100045b0	KERNEL32.dll.FindNextFileA
0x10008a7e	0x1000d7b0	string	0x10008a40	The NCBENUM return adapter number is: %d \n
0x10008a83	0x1000b174	import	0x10008a40	MSVCRT.dll.printf
0x10008b76	0x1000d78c	string	0x10008a40	%02x-%02x-%02x-%02x-%02x-%02x
0x10008b7c	0x1000b158	import	0x10008a40	MSVCRT.dll.sprintf
0x10008c82	0x1000b070	import	0x10008c40	KERNEL32.dll.GetVersionExA
0x10008cb0	0x1000b06c	import	0x10008c40	KERNEL32.dll.GetCurrentThread
0x10008cb7	0x1000b02c	import	0x10008c40	ADVAPI32.dll.OpenThreadToken
0x10008cc1	0x1000b0c0	import	0x10008c40	KERNEL32.dll.GetLastError
0x10008cd9	0x1000b068	import	0x10008c40	KERNEL32.dll.GetCurrentProcess
0x10008ce0	0x1000b03c	import	0x10008c40	ADVAPI32.dll.OpenProcessToken
0x10008d07	0x1000b000	import	0x10008c40	ADVAPI32.dll.GetTokenInformation
0x10008d14	0x1000b0c8	import	0x10008c40	KERNEL32.dll.CloseHandle
0x10008d3b	0x1000b004	import	0x10008c40	ADVAPI32.dll.AllocateAndInitializeSid
0x10008d53	0x1000b008	import	0x10008c40	ADVAPI32.dll.EqualSid
0x10008d89	0x1000b00c	import	0x10008c40	ADVAPI32.dll.FreeSid
0x10008ddb	0x1000b104	import	0x10008db0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10008df4	0x1000b060	import	0x10008db0	KERNEL32.dll.GetSystemInfo
0x10008e07	0x1000b070	import	0x10008db0	KERNEL32.dll.GetVersionExA
0x10008e43	0x1000d8d4	string	0x10008db0	Windows Me
0x10008e53	0x1000d8d4	string	0x10008db0	Windows Me
0x10008e5c	0x1000b12c	import	0x10008db0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10008e67	0x1000d8c8	string	0x10008db0	Windows 98
0x10008e77	0x1000d8c8	string	0x10008db0	Windows 98
0x10008e80	0x1000b12c	import	0x10008db0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10008e94	0x1000d8b8	string	0x10008db0	Windows NT 4.0
0x10008ea4	0x1000d8b8	string	0x10008db0	Windows NT 4.0
0x10008ead	0x1000b12c	import	0x10008db0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10008ec1	0x1000d8ac	string	0x10008db0	Windows 95
0x10008ed1	0x1000d8ac	string	0x10008db0	Windows 95
0x10008eda	0x1000b12c	import	0x10008db0	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10008ef8	0x1000d898	string	0x10008db0	Windows Server2003
0x10008f10	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10008f26	0x1000d898	string	0x10008db0	Windows Server2003
0x10008f37	0x1000d88c	string	0x10008db0	Windows XP
0x10008f4f	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10008f5f	0x1000d88c	string	0x10008db0	Windows XP
0x10008f69	0x1000d87c	string	0x10008db0	Windows 2000
0x10008f81	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10008f97	0x1000d87c	string	0x10008db0	Windows 2000
0x10008fcd	0x1000d870	string	0x10008db0	Windows 8
0x10008fe5	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10008ff5	0x1000d870	string	0x10008db0	Windows 8
0x10008fff	0x1000d85c	string	0x10008db0	Windows Server 2012
0x10009017	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x1000902d	0x1000d85c	string	0x10008db0	Windows Server 2012
0x10009048	0x1000d850	string	0x10008db0	Windows 7
0x10009060	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10009070	0x1000d850	string	0x10008db0	Windows 7
0x1000907a	0x1000d838	string	0x10008db0	Windows Server 2008 R2
0x10009092	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100090a8	0x1000d838	string	0x10008db0	Windows Server 2008 R2
0x100090c3	0x1000d828	string	0x10008db0	Windows Vista
0x100090db	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100090eb	0x1000d828	string	0x10008db0	Windows Vista
0x100090f5	0x1000d814	string	0x10008db0	Windows Server 2008
0x1000910d	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10009123	0x1000d814	string	0x10008db0	Windows Server 2008
0x1000914a	0x1000d808	string	0x10008db0	Windows 10
0x10009162	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10009172	0x1000d808	string	0x10008db0	Windows 10
0x10009179	0x1000d7f4	string	0x10008db0	Windows Server 2016
0x10009191	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100091a3	0x1000d7f4	string	0x10008db0	Windows Server 2016
0x100091b1	0x1000d7e4	string	0x10008db0	Other version
0x100091c9	0x1000b110	import	0x10008db0	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x100091d5	0x1000d7e4	string	0x10008db0	Other version
0x100091f1	0x1000b124	import	0x10008db0	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Eos(unsigned int)
0x100091fb	0x1000b0fc	import	0x10008db0	MSVCP60.dll.sym_imp_char const `private: static char const * __cdecl std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Nullstr(void)'::`2'::_C
0x1000922c	0x1000d7dc	string	0x10008db0	error
0x100092f2	0x1000b06c	import	0x100092c0	KERNEL32.dll.GetCurrentThread
0x100092f9	0x1000b02c	import	0x100092c0	ADVAPI32.dll.OpenThreadToken
0x10009304	0x1000b0c0	import	0x100092c0	KERNEL32.dll.GetLastError
0x10009318	0x1000b068	import	0x100092c0	KERNEL32.dll.GetCurrentProcess
0x1000931f	0x1000b03c	import	0x100092c0	ADVAPI32.dll.OpenProcessToken
0x10009348	0x1000b000	import	0x100092c0	ADVAPI32.dll.GetTokenInformation
0x10009379	0x1000b030	import	0x100092c0	ADVAPI32.dll.LookupAccountSidA
0x1000939f	0x1000d8f4	string	0x10009390	HARDWARE\DESCRIPTION\System\CentralProcessor\0
0x100093c1	0x1000d8e0	string	0x10009390	ProcessorNameString
0x100093db	0x1000b150	import	0x10009390	MSVCRT.dll.malloc
0x100093fc	0x1000b034	import	0x10009390	ADVAPI32.dll.RegOpenKeyExA
0x1000940e	0x1000b014	import	0x10009390	ADVAPI32.dll.RegQueryValueExA
0x10009426	0x1000b154	import	0x10009390	MSVCRT.dll.realloc
0x1000946c	0x1000b010	import	0x10009390	ADVAPI32.dll.RegCloseKey
0x10009474	0x1000b0ac	import	0x10009390	KERNEL32.dll.Sleep
0x100094ae	0x1000b074	import	0x10009490	KERNEL32.dll.GlobalMemoryStatusEx
0x100094ce	0x1000d924	string	0x10009490	%d MB
0x100094d8	0x1000b1a0	import	0x10009490	USER32.dll.wsprintfA
0x10009509	0x1000b078	import	0x100094f0	KERNEL32.dll.GetLocaleInfoA
0x10009563	0x1000b1e4	import	0x10009540	WS2_32.dll.gethostname
0x10009576	0x1000b1e8	import	0x10009540	WS2_32.dll.gethostbyname
0x1000958a	0x1000b1ec	import	0x10009540	WS2_32.dll.inet_ntoa
0x100095d4	0x1000b07c	import	0x10009540	KERNEL32.dll.GetOEMCP
0x10009613	0x1000b104	import	0x10009540	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x1000962f	0x1000b110	import	0x10009540	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x1000966a	0x1000b11c	import	0x10009540	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x1000967f	0x1000b118	import	0x10009540	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x100096b7	0x1000b0fc	import	0x10009540	MSVCP60.dll.sym_imp_char const `private: static char const * __cdecl std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Nullstr(void)'::`2'::_C
0x100096d3	0x1000d188	string	0x10009540	1216
0x10009808	0x1000b0c0	import	0x10009540	KERNEL32.dll.GetLastError
0x1000985c	0x1000b084	import	0x10009540	KERNEL32.dll.GetTempPathA
0x10009862	0x1000d958	string	0x10009540	dwt.exe
0x1000989c	0x1000d940	string	0x10009540	UserInitMprLogonScript
0x100098ab	0x1000b080	import	0x10009540	KERNEL32.dll.MoveFileExA
0x100098bd	0x1000d934	string	0x10009540	Environment
0x100098c7	0x1000b034	import	0x10009540	ADVAPI32.dll.RegOpenKeyExA
0x100098de	0x1000b038	import	0x10009540	ADVAPI32.dll.RegDeleteValueA
0x100098e8	0x1000d7dc	string	0x10009540	error
0x100098ed	0x1000b174	import	0x10009540	MSVCRT.dll.printf
0x100098fb	0x1000b010	import	0x10009540	ADVAPI32.dll.RegCloseKey
0x10009952	0x1000b104	import	0x10009910	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10009965	0x1000b1f0	import	0x10009910	WS2_32.dll.WSAStartup
0x10009975	0x1000b0ac	import	0x10009910	KERNEL32.dll.Sleep
0x10009992	0x1000d194	string	0x10009910	news.php
0x10009998	0x1000d088	string	0x10009910	www.yandex2unitedstated.dynamic-dns.net
0x100099a1	0x1000da04	string	0x10009910	http://%s:%d/%s?type=1&hash=%s&time=%s\n
0x100099a7	0x1000b158	import	0x10009910	MSVCRT.dll.sprintf
0x100099c0	0x1000b104	import	0x10009910	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x100099db	0x1000b110	import	0x10009910	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10009a12	0x1000b11c	import	0x10009910	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10009a24	0x1000b118	import	0x10009910	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10009a30	0x1000b104	import	0x10009910	MSVCP60.dll.sym_imp_private: void __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Tidy(bool)
0x10009a5d	0x1000b110	import	0x10009910	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10009aa4	0x1000d9f8	string	0x10009910	post_info
0x10009abb	0x1000b110	import	0x10009910	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10009acf	0x1000d9f8	string	0x10009910	post_info
0x10009b1d	0x1000d990	string	0x10009910	{ "md5": "%s", "Name": "%s","IP": "%s","OS": "%s","Domain": "%s","Note": "%s","Chcp": "%d","In_IP":
0x10009b23	0x1000b158	import	0x10009910	MSVCRT.dll.sprintf
0x10009b71	0x1000b0ac	import	0x10009910	KERNEL32.dll.Sleep
0x10009b9e	0x1000d194	string	0x10009910	news.php
0x10009ba4	0x1000d088	string	0x10009910	www.yandex2unitedstated.dynamic-dns.net
0x10009bad	0x1000d968	string	0x10009910	http://%s:%d/%s?type=2&hash=%s&time=%s\n
0x10009bb3	0x1000b158	import	0x10009910	MSVCRT.dll.sprintf
0x10009be7	0x1000b12c	import	0x10009910	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(char const *, unsigned int)
0x10009bf7	0x1000b11c	import	0x10009910	MSVCP60.dll.sym_imp_unsigned int const std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::npos
0x10009c09	0x1000b118	import	0x10009910	MSVCP60.dll.sym_imp_public: class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> & __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::assign(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, unsigned int, unsigned int)
0x10009c66	0x1000b110	import	0x10009910	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10009c84	0x1000b0fc	import	0x10009910	MSVCP60.dll.sym_imp_char const `private: static char const * __cdecl std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Nullstr(void)'::`2'::_C
0x10009ca9	0x1000b110	import	0x10009910	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10009cc7	0x1000b0fc	import	0x10009910	MSVCP60.dll.sym_imp_char const `private: static char const * __cdecl std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Nullstr(void)'::`2'::_C
0x10009cec	0x1000b110	import	0x10009910	MSVCP60.dll.sym_imp_private: bool __thiscall std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Grow(unsigned int, bool)
0x10009d06	0x1000b0fc	import	0x10009910	MSVCP60.dll.sym_imp_char const `private: static char const * __cdecl std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>>::_Nullstr(void)'::`2'::_C
0x10009d2c	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009d45	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009d5a	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009d6f	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009d86	0x1000b088	import	0x10009910	KERNEL32.dll.GetExitCodeProcess
0x10009d9b	0x1000d960	string	0x10009910	m\nver
0x10009da7	0x1000b1a4	import	0x10009910	USER32.dll.PostThreadMessageA
0x10009dc0	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009de2	0x1000b1a4	import	0x10009910	USER32.dll.PostThreadMessageA
0x10009df7	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009e10	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009e29	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009e42	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009e5b	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009e74	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009e8d	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009ea2	0x1000b0a8	import	0x10009910	KERNEL32.dll.CreateThread
0x10009f00	0x1000b090	import	0x10009f00	KERNEL32.dll.Process32Next
0x10009f06	0x1000b064	import	0x10009f06	KERNEL32.dll.Process32First
0x10009f0c	0x1000b044	import	0x10009f0c	KERNEL32.dll.CreateToolhelp32Snapshot
0x10009f1e	0x1000b0d8	import	0x10009f1e	MSVCP60.dll.sym_imp_class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> __cdecl std::operator+(class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &, class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char>> const &)
0x10009f31	0x1000b144	import	0x10009f24	MSVCRT.dll._onexit
0x10009f70	0x1000b160	import	0x10009f70	MSVCRT.dll.sym_imp_void * __cdecl operator new(unsigned int)
0x10009ff5	0x1000b17c	import	0x10009fdf	MSVCRT.dll._adjust_fdiv
0x1000a00d	0x1000b150	import	0x10009fdf	MSVCRT.dll.malloc
0x1000a075	0x1000b14c	import	0x10009fdf	MSVCRT.dll.free
0x1000a128	0x1000b14c	import	0x1000a128	MSVCRT.dll.free
0x1000a12e	0x1000b148	import	0x1000a12e	MSVCRT.dll.__dllonexit
0x1000a134	0x1000b140	import	0x1000a134	MSVCRT.dll._initterm
0x1000a13a	0x1000b18c	import	0x1000a13a	PSAPI.DLL.GetModuleFileNameExA
0x1000a140	0x1000b184	import	0x1000a140	NETAPI32.dll.Netbios
