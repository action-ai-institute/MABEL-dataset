reference_vaddr	symbol_addr	symbol_type	caller_function	data
0x40c44c	0x40c460	string	0x40b5a3	E}\n5
0x40c4cd	0x40c50a	string	0x40b5a3	~ \aZA\
0x40c7e6	0x40c7ef	string	0x40b5a3	\vtxH
0x40cb1a	0x40cb61	string	0x40b5a3	fJ7K
0x410395	0x410413	string	0x40b5a3	uE<.X
0x4103e5	0x4103e7	string	0x40b5a3	BPeܢT҃ blocks=Basic Latin,Syriac,Cyrillic
0x410760	0x41078c	string	0x40b5a3	m{DF
0x410d41	0x410d37	string	0x40b5a3	(E&{W
0x85bae8	0x85bb59	string	0x85baa5	'%(_ResolvedNativeProjectReferencePaths.UseLibraryDependencyInputs)'=='false' or '%(_ResolvedNativeProjectReferencePaths.ProjectType)'!='StaticLibrary')"\r\n Include="@(_ResolvedNativeProjectReferencePaths)"/>\r\n <ProjectReferenceToLink Condition="'%(_ResolvedNativeProjectReferencePaths.FileType)'=='obj'\r\n and '%(_ResolvedNativeProjectReferencePaths.LinkLibraryDependencies)'!='false'\r\n and '%(_ResolvedNativeProjectReferencePaths.UseLibraryDependencyInputs)'=='true'\r\n and '%(_ResolvedNativeProjectReferencePaths.ProjectType)'=='StaticLibrary'"\r\n Include="@(_ResolvedNativeProjectReferencePaths)"/>\r\n <ProjectReferenceToLink>\r\n <CopyLocal Condition="'%(ProjectReferenceToLink.CopyLocal)'==''">%(ProjectReferenceToLink.Private)</CopyLocal>\r\n </ProjectReferenceToLink>\r\n <Lib Condition="'@(ProjectReferenceToLink)'!=''" Include="@(ProjectReferenceToLink->ClearMetadata()->Distinct())" />\r\n </ItemGroup>\r\n <Message Condition="'$(_REFERENCE_DEBUG)'=='true'" Text="ProjectReferenceToLink=@(ProjectReferenceToLink)" Importance="high" />\r\n </Target>\r\n\r\n <PropertyGroup>\r\n <ComputeLibInputsTargets>\r\n $(ComputeLibInputsTargets);\r\n ComputeReferenceLibInputs;\r\n </ComputeLibInputsTargets>\r\n </PropertyGroup>\r\n\r\n <!-- *******************************************************************************************\r\n Lib targets\r\n ******************************************************************************************* -->\r\n <Target Name="_Lib"\r\n DependsOnTargets="$(BeforeLibTargets);$(ComputeLibInputsTargets);MakeDirsForLib;DoLibOutputFilesMatch;PreLinkEvent;Lib;$(AfterLibTargets);"\r\n Condition="'$(LibCompiled)' == 'true'">\r\n </Target>\r\n\r\n <Target Name="DoLibOutputFilesMatch" Condition="'@(Lib)' != ''">\r\n <ItemGroup>\r\n <_OutputFileFromLib Include="%(Lib.O
0x85baf2	0x85bb59	string	0x85baa5	'%(_ResolvedNativeProjectReferencePaths.UseLibraryDependencyInputs)'=='false' or '%(_ResolvedNativeProjectReferencePaths.ProjectType)'!='StaticLibrary')"\r\n Include="@(_ResolvedNativeProjectReferencePaths)"/>\r\n <ProjectReferenceToLink Condition="'%(_ResolvedNativeProjectReferencePaths.FileType)'=='obj'\r\n and '%(_ResolvedNativeProjectReferencePaths.LinkLibraryDependencies)'!='false'\r\n and '%(_ResolvedNativeProjectReferencePaths.UseLibraryDependencyInputs)'=='true'\r\n and '%(_ResolvedNativeProjectReferencePaths.ProjectType)'=='StaticLibrary'"\r\n Include="@(_ResolvedNativeProjectReferencePaths)"/>\r\n <ProjectReferenceToLink>\r\n <CopyLocal Condition="'%(ProjectReferenceToLink.CopyLocal)'==''">%(ProjectReferenceToLink.Private)</CopyLocal>\r\n </ProjectReferenceToLink>\r\n <Lib Condition="'@(ProjectReferenceToLink)'!=''" Include="@(ProjectReferenceToLink->ClearMetadata()->Distinct())" />\r\n </ItemGroup>\r\n <Message Condition="'$(_REFERENCE_DEBUG)'=='true'" Text="ProjectReferenceToLink=@(ProjectReferenceToLink)" Importance="high" />\r\n </Target>\r\n\r\n <PropertyGroup>\r\n <ComputeLibInputsTargets>\r\n $(ComputeLibInputsTargets);\r\n ComputeReferenceLibInputs;\r\n </ComputeLibInputsTargets>\r\n </PropertyGroup>\r\n\r\n <!-- *******************************************************************************************\r\n Lib targets\r\n ******************************************************************************************* -->\r\n <Target Name="_Lib"\r\n DependsOnTargets="$(BeforeLibTargets);$(ComputeLibInputsTargets);MakeDirsForLib;DoLibOutputFilesMatch;PreLinkEvent;Lib;$(AfterLibTargets);"\r\n Condition="'$(LibCompiled)' == 'true'">\r\n </Target>\r\n\r\n <Target Name="DoLibOutputFilesMatch" Condition="'@(Lib)' != ''">\r\n <ItemGroup>\r\n <_OutputFileFromLib Include="%(Lib.O
0x86267d	0x8626e8	string	0x85baa5	ata())" />\r\n <DocumentationProjectOutputGroupOutput Remove="@(DocumentationProjectOutputGroupOutput)" Condition="!Exists(%(DocumentationProjectOutputGroupOutput.Identity))"/>\r\n <XDCMake Condition="'%(XDCMake.localtemp)' == 'true'" Remove="@(XDCMake)" />\r\n </ItemGroup>\r\n </Target>\r\n\r\n<!-- *************************SourceFilesProjectOutputGroup****************************************** -->\r\n\r\n <PropertyGroup>\r\n <SourceFilesProjectOutputGroupDependsOn>PrepareForBuild;AssignTargetPaths</SourceFilesProjectOutputGroupDependsOn>\r\n </PropertyGroup>\r\n\r\n <Target\r\n Name="SourceFilesProjectOutputGroup"\r\n Returns="@(SourceFilesProjectOutputGroupOutput)"\r\n DependsOnTargets="$(SourceFilesProjectOutputGroupDependsOn)">\r\n\r\n <AssignTargetPath Files="@(Compile)" RootFolder="$(MSBuildProjectDirectory)">\r\n <Output TaskParameter="AssignedFiles" ItemName="_CompileWithTargetPath" />\r\n </AssignTargetPath>\r\n\r\n <ItemGroup>\r\n <!-- First we deal with Compile, EmbeddedResource and AppConfig -->\r\n <SourceFilesProjectOutputGroupOutput\r\n Include="@(ClCompile->'%(FullPath)');\r\n @(EmbeddedResource->'%(FullPath)');\r\n @(LicxCompiler->'%(FullPath)');\r\n @(MASM->'%(FullPath)');\r\n @(ClInclude->'%(FullPath)');\r\n @(Midl->'%(FullPath)');\r\n @(ResourceCompile->'%(FullPath)');\r\n @(Xsd->'%(FullPath)');\r\n @(CustomBuild->'%(FullPath)');\r\n @(Resource->'%(FullPath)');\r\n @(Object->'%(FullPath)');\r\n @(Library->'%(FullPath)');\r\n @(Manifest->'%(FullPath)');\r\n @(Image->'%(FullPath)');\r\n @(Media->'%(FullPath)');\r\n @(Font->'%(FullPath)');\r\n @(_EmbedManagedResourceFile->'%(FullPath)');\r\n @(AppConfigWithTargetPath->'%(FullPath)');\r\n $(AdditionalSourceFil
0x862e22	0x862e90	string	0x85baa5	es)"/>\r\n\r\n <!-- Include the project file -->\r\n <SourceFilesProjectOutputGroupOutput Include="$(MSBuildProjectFullPath)">\r\n <!-- For compatibility with 2.0 -->\r\n <OriginalItemSpec>$(MSBuildProjectFullPath)</OriginalItemSpec>\r\n <TargetPath>$(ProjectFileName)</TargetPath>\r\n </SourceFilesProjectOutputGroupOutput>\r\n </ItemGroup>\r\n </Target>\r\n\r\n<!-- *************************ContentFilesProjectOutputGroup****************************************** -->\r\n\r\n <PropertyGroup>\r\n <ContentFilesProjectOutputGroupDependsOn>$(ContentFilesProjectOutputGroupDependsOn);PrepareForBuild;AssignTargetPaths;MakeDirsForFxc</ContentFilesProjectOutputGroupDependsOn>\r\n </PropertyGroup>\r\n\r\n <Target\r\n Name="ContentFilesProjectOutputGroup"\r\n Returns="@(ContentFilesProjectOutputGroupOutput)"\r\n DependsOnTargets="$(ContentFilesProjectOutputGroupDependsOn)">\r\n\r\n <ItemGroup>\r\n <_ContentFilesProjectOutputGroupOutput\r\n Include="@(ClCompile);\r\n @(EmbeddedResource);\r\n @(_LicxFile);\r\n @(ClInclude);\r\n @(Midl);\r\n @(FxcOutputs);\r\n @(ResourceCompile);\r\n @(Xsd);\r\n @(Xml);\r\n @(Text);\r\n @(Font);\r\n @(CustomBuild);\r\n @(Resource);\r\n @(Object);\r\n @(Library);\r\n @(Manifest);\r\n @(Image);\r\n @(Media);\r\n @(_EmbedManagedResourceFile);\r\n @(AppConfigWithTargetPath);\r\n @(None);\r\n $(AdditionalContentFiles)" >\r\n </_ContentFilesProjectOutputGroupOutput>\r\n\r\n <!-- Add CustomBuild->Outputs since the output is different than the initial include -->\r\n <_ContentFilesProjectOutputGroupOutput Include="@(CustomBuild->WithMetadataValue('TreatOutputAsContent', 'true')->Metadata('Outputs'
0x8684ff	0x86856f	string	0x85baa5	[public] */ DECLSPEC_UUID("0a0fbc2f-8dee-4f8e-b3e1-6838989fb408") \r\nenum VerifierErrorReporting\r\n {\r\n VerifierErrorReportingNoBreak\t= 0,\r\n VerifierErrorReportingException\t= 1,\r\n VerifierErrorReportingBreakpoint\t= 2\r\n } \tVerifierErrorReporting;\r\n\r\ntypedef /* [helpstring][uuid][public] */ DECLSPEC_UUID("de9d346c-ce91-4695-84b8-66d4ef336258") \r\nenum VerifierErrorFlag\r\n {\r\n VerifierErrorFlagLogToFile\t= 0x1,\r\n VerifierErrorFlagLogStackTrace\t= 0x2\r\n } \tVerifierErrorFlag;\r\n\r\ntypedef /* [helpstring][uuid][public] */ DECLSPEC_UUID("0512b3f5-59f8-4d42-a997-93951b0b7e1f") \r\nenum VerifierStopFlag\r\n {\r\n VerifierStopFlagStopOnce\t= 0x1,\r\n VerifierStopFlagNotContinuable\t= 0x2\r\n } \tVerifierStopFlag;\r\n\r\ntypedef /* [helpstring][uuid][public] */ DECLSPEC_UUID("fd5c2b74-01ef-4d17-a8a9-3d76d245a863") \r\nenum VerifierPropertyType\r\n {\r\n VerifierPropertyTypeNone\t= 0,\r\n VerifierPropertyTypeDWORD\t= 1,\r\n VerifierPropertyTypeQWORD\t= 2,\r\n VerifierPropertyTypeString\t= 3,\r\n VerifierPropertyTypeStringArray\t= 4,\r\n VerifierPropertyTypeByteArray\t= 5,\r\n VerifierPropertyTypeBoolean\t= 6\r\n } \tVerifierPropertyType;\r\n\r\n\r\nEXTERN_C const IID LIBID_APPVERIFIER;\r\n\r\n#ifndef __IAppVerifierManager_INTERFACE_DEFINED__\r\n#define __IAppVerifierManager_INTERFACE_DEFINED__\r\n\r\n/* interface IAppVerifierManager */\r\n/* [local][unique][dual][uuid][object] */ \r\n\r\n\r\nEXTERN_C const IID IID_IAppVerifierManager;\r\n\r\n#if defined(__cplusplus) && !defined(CINTERFACE)\r\n \r\n MIDL_INTERFACE("6b0532d9-ee3c-4865-8c1a-8e4e9fcaa7fc")\r\n IAppVerifierManager : public IDispatch\r\n {\r\n public:\r\n virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MajorVersion( \r\n /* [retval][out] */ LONG *plMajorVersion) = 0;\r\n \r\n virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE
0x868c75	0x868ceb	string	0x85baa5	get_MinorVersion( \r\n /* [retval][out] */ LONG *plMinorVersion) = 0;\r\n \r\n virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_BuildVersion( \r\n /* [retval][out] */ LONG *plBuildVersion) = 0;\r\n \r\n virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PrivateVersion( \r\n /* [retval][out] */ LONG *plPrivateVersion) = 0;\r\n \r\n virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Images( \r\n /* [retval][out] */ IAppVerifierImages **ppImages) = 0;\r\n \r\n virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Checks( \r\n /* [retval][out] */ IAppVerifierChecks **ppChecks) = 0;\r\n \r\n virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Logs( \r\n /* [in] */ BSTR Image,\r\n /* [retval][out] */ IAppVerifierImageLogs **ppLogs) = 0;\r\n \r\n };\r\n \r\n \r\n#else \t/* C style interface */\r\n\r\n typedef struct IAppVerifierManagerVtbl\r\n {\r\n BEGIN_INTERFACE\r\n \r\n HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \r\n IAppVerifierManager * This,\r\n /* [in] */ REFIID riid,\r\n /* [annotation][iid_is][out] */ \r\n _COM_Outptr_ void **ppvObject);\r\n \r\n ULONG ( STDMETHODCALLTYPE *AddRef )( \r\n IAppVerifierManager * This);\r\n \r\n ULONG ( STDMETHODCALLTYPE *Release )( \r\n IAppVerifierManager * This);\r\n \r\n HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( \r\n IAppVerifierManager * This,\r\n /* [out] */ UINT *pctinfo);\r\n \r\n HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( \r\n IAppVerifierManager * This,\r\n /* [in] */ UINT iTInfo,\r\n /* [in] */ LCID lcid,\r\n /* [out] */ ITypeInfo **ppTInfo);\r\n \r\n HRESULT ( STDMETHODCALLTY
0x873174	0x8731ec	string	0x85baa5	E get_Item( \r\n /* [in] */ BSTR bstrProperty,\r\n /* [retval][out] */ IAppVerifierProperty **ppProperty) = 0;\r\n \r\n };\r\n \r\n \r\n#else \t/* C style interface */\r\n\r\n typedef struct IAppVerifierPropertiesVtbl\r\n {\r\n BEGIN_INTERFACE\r\n \r\n HRESULT ( STDMETHODCALLTYPE *QueryInterface )( \r\n IAppVerifierProperties * This,\r\n /* [in] */ REFIID riid,\r\n /* [annotation][iid_is][out] */ \r\n _COM_Outptr_ void **ppvObject);\r\n \r\n ULONG ( STDMETHODCALLTYPE *AddRef )( \r\n IAppVerifierProperties * This);\r\n \r\n ULONG ( STDMETHODCALLTYPE *Release )( \r\n IAppVerifierProperties * This);\r\n \r\n HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( \r\n IAppVerifierProperties * This,\r\n /* [out] */ UINT *pctinfo);\r\n \r\n HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( \r\n IAppVerifierProperties * This,\r\n /* [in] */ UINT iTInfo,\r\n /* [in] */ LCID lcid,\r\n /* [out] */ ITypeInfo **ppTInfo);\r\n \r\n HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( \r\n IAppVerifierProperties * This,\r\n /* [in] */ REFIID riid,\r\n /* [size_is][in] */ LPOLESTR *rgszNames,\r\n /* [range][in] */ UINT cNames,\r\n /* [in] */ LCID lcid,\r\n /* [size_is][out] */ DISPID *rgDispId);\r\n \r\n /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( \r\n IAppVerifierProperties * This,\r\n /* [annotation][in] */ \r\n _In_ DISPID dispIdMember,\r\n /* [annotation][in] */ \r\n _In_ REFIID riid,\r\n /* [annotation][in] */ \r\n _In_ LCID lcid,\r\n /* [annotation][in] */ \r\n _In_ WORD wFlags,\r\n /* [annotation][out][in] */ \r\n _In_ DISPPARAMS *pDispParams,
